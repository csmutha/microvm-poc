apiVersion: v1
kind: Secret
metadata:
  name: log-analyzer-secrets
  namespace: microvm-poc
type: Opaque
data:
  # This is a placeholder - you need to replace this with your actual Gemini API key
  # Use: echo -n "your-api-key" | base64
  gemini-api-key: UkVQTEFDRV9XSVRIX1lPVVJfQVBJX0tFWQ==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-analyzer
  namespace: microvm-poc
  labels:
    app: log-analyzer
    component: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-analyzer
  template:
    metadata:
      labels:
        app: log-analyzer
        component: observability
    spec:
      containers:
      - name: log-analyzer
        image: localhost:5001/microvm-poc/log-analyzer:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        - containerPort: 8000
          name: metrics
        env:
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: log-analyzer-secrets
              key: gemini-api-key
        - name: FLUENTD_HOST
          value: "fluentd"
        - name: FLUENTD_PORT
          value: "24224"
        - name: NAMESPACE
          value: "microvm-poc"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: log-analyzer
  namespace: microvm-poc
  labels:
    app: log-analyzer
    component: observability
spec:
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  - port: 8000
    targetPort: 8000
    name: metrics
  selector:
    app: log-analyzer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: log-analyzer
  namespace: microvm-poc
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: log-analyzer
  namespace: microvm-poc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: log-analyzer
  namespace: microvm-poc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: log-analyzer
subjects:
- kind: ServiceAccount
  name: log-analyzer
  namespace: microvm-poc
